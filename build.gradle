plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.hajin'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // open Ai
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.theokanning.openai-gpt3-java:api:0.18.2'
    implementation 'com.theokanning.openai-gpt3-java:client:0.18.2'

    // prompt
    implementation 'org.json:json:20240303'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'


}

tasks.jacocoTestReport {
    dependsOn tasks.test
    reports {
        xml.required.set(true) // XML 리포트 생성
        csv.required.set(false) // CSV 리포트는 생성하지 않음
        html.required.set(true) // HTML 리포트 생성

        // 리포트가 저장될 경로 설정
        html.destination file("jacoco/jacocoHtml")
        xml.destination file("jacoco/jacoco.xml")
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
